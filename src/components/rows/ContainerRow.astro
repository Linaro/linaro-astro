---
import { getCloudinarySrc } from "@/lib/cloudinary";
import { getImage } from "astro:assets";
import * as marked from "marked";

const { styles, title, background_image, animation, no_border } = Astro.props;
let titleMarkdown;
if (title) {
  titleMarkdown = await marked.parseInline(title);
}

let optimizedBackground = { src: "" };
if (background_image) {
  optimizedBackground = await getImage({
    src: getCloudinarySrc({
      src: background_image,
      alt: "",
      width: 2000,
      height: 1500,
    }),
    format: "webp",
    inferSize: true,
  });
}
---

<section
  class:list={[
    "w-full",
    background_image ? "container-background-image" : "",
    styles?.outer,
  ]}
>
  <div class:list={[" container mx-auto px-8"]}>
    <div class="flex items-center">
      {
        title ? (
          <>
            {!no_border && <div class="fade-border" />}
            <h2
              class="text-white relative whitespace-prewrap md:min-w-[20ch] my-0 mx-8 text-3xl lg:text-5xl prose-em:linaro-gradient-text prose-em:not-italic text-center"
              set:html={titleMarkdown}
            />
            {!no_border && <div class="fade-border" />}
          </>
        ) : (
          !no_border && <div class="fade-border" />
        )
      }
    </div>
    <div
      class:list={["invisible animate-delay-100", styles?.inner ?? "py-36"]}
      data-animate={animation === "none"
        ? null
        : animation ?? "animate-fade-down"}
    >
      <slot />
    </div>
  </div>
</section>
<style
  define:vars={{ backgroundUrl: `url(${optimizedBackground.src})` }}
  lang="scss"
>
  .container-background-image {
    background-image: var(--backgroundUrl);
  }
</style>
