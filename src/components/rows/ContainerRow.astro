---
import { getCloudinarySrc } from "@/lib/cloudinary";
import { getImage } from "astro:assets";
import * as marked from "marked";

const { styles, title, background_image, animation, no_border, full_width } =
  Astro.props;
let titleMarkdown;
if (title) {
  titleMarkdown = await marked.parseInline(title);
}

let optimizedBackground = { src: "" };
if (background_image) {
  optimizedBackground = await getImage({
    src: getCloudinarySrc({
      src: background_image,
      alt: "",
      width: 2000,
      height: 1500,
    }),
    format: "webp",
    inferSize: true,
  });
}
---

<section
  class:list={[
    "w-full",
    background_image ? "container-background-image" : "",
    styles?.outer,
  ]}
>
  <div
    class:list={full_width ? [] : ["container", "mx-auto", "px-4", "md:px-8"]}
  >
    {
      title &&
        (no_border ? (
          <div class="w-full text-center">
            <h2
              class:list={[
                "text-white relative whitespace-prewrap my-0 text-3xl lg:text-5xl prose-em:linaro-gradient-text prose-em:not-italic inline-block",
                styles?.title ?? "md:min-w-[25ch]",
              ]}
              set:html={titleMarkdown}
            />
          </div>
        ) : (
          <div class="flex items-center justify-center w-full">
            <div class="fade-border" />
            <h2
              class:list={[
                "text-white relative whitespace-prewrap my-0 mx-8 text-3xl lg:text-5xl prose-em:linaro-gradient-text prose-em:not-italic text-center",
                styles?.title ?? "md:min-w-[25ch]",
              ]}
              set:html={titleMarkdown}
            />
            <div class="fade-border" />
          </div>
        ))
    }

    <div
      class:list={[
        "animate-delay-100",
        styles?.inner ?? "py-24",
        animation !== "none" && "invisible",
      ]}
      data-animate={animation === "none"
        ? null
        : (animation ?? "animate-fade-down")}
    >
      <slot />
    </div>
  </div>
</section>
<style
  define:vars={{ backgroundUrl: `url(${optimizedBackground.src})` }}
  lang="scss"
>
  .container-background-image {
    background-image: var(--backgroundUrl);
  }
</style>
