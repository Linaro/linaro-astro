---
import { Icon } from "astro-icon/components";
import NavSearch from "./NavSearch";

const { id } = Astro.props;
---

<style lang="scss">
  dialog {
    position: fixed;
    top: 10%;
    right: 0;
    left: 0;
    margin: 0 auto;
    &::backdrop {
      position: fixed;
      top: 0px;
      right: 0px;
      bottom: 0px;
      left: 0px;
      background: rgba(0, 0, 0, 0.4);
    }
  }
</style>

<button id="search-modal-open-button" class="ml-auto mr-4 float-right p-2"
  ><Icon name="search" size={20} /></button
>
<div class="relative w-full">
  <dialog
    id="search-modal-dialog"
    class="bg-transparent rounded-xl mx-auto w-full max-w-6xl"
  >
    <div class="relative bg-background text-white p-4 rounded-xl">
      <NavSearch client:only="solid-js" />
    </div>
  </dialog>
</div>

<script>
  ["DOMContentLoaded", "astro:after-swap"].forEach((event) => {
    document.addEventListener(event, addListeners);
  });

  function addListeners() {
    const dialog = document.getElementById(
      "search-modal-dialog"
    ) as HTMLDialogElement;
    const openButton = document.getElementById("search-modal-open-button");
    const closeButton = document.getElementById("search-modal-close-button");

    openButton?.addEventListener("click", () => {
      dialog?.showModal();
    });
    closeButton?.addEventListener("click", () => {
      dialog?.close();
    });

    dialog.addEventListener("click", function (event) {
      const rect = dialog.getBoundingClientRect();
      const isInDialog =
        rect.top <= event.clientY &&
        event.clientY <= rect.top + rect.height &&
        rect.left <= event.clientX &&
        event.clientX <= rect.left + rect.width;
      if (!isInDialog) {
        dialog.close();
      }
    });
  }
</script>
